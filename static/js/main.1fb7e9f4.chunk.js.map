{"version":3,"sources":["actions/index.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/book-list/index.js","components/book-list/book-list.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","utils/index.js","utils/compose.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-book-store-service.js","components/pages/home-page.js","components/pages/cart-page.js","book-item-page/index.js","book-item-page/book-item.js","components/pages/book-page.js","components/header/index.js","components/header/header.js","components/app/index.js","components/app/app.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","services/bookstore-service.js","reducers/shopping-cart.js","reducers/bookList.js","reducers/index.js","store.js","index.js"],"names":["booksLoaded","newBookList","type","payload","booksLoadingError","error","bookAddedToCart","bookId","bookRemovedFromCart","allBooksRemovedFromCart","BookListItem","connect","state","books","bookList","dispatch","bindActionCreators","book","onAddedToCart","title","author","price","bookImageUrl","className","to","id","src","alt","onClick","BookListContainer","map","key","shoppingCart","items","cartItems","total","orderTotal","onIncrease","onDecrease","onDelete","item","index","count","ShoppingCartTable","Spinner","ErrorIndicator","errorText","window","location","reload","compose","funcArr","componentToWrap","reduceRight","wrapped","f","React","createContext","BookStoreServiceProvider","Provider","BookStoreServiceConsumer","Consumer","withBookStoreService","Wrapped","props","bookStoreService","HomePage","fetchBooks","this","isBooksLoading","Component","ownProps","getBooks","then","catch","CartPage","style","BookItem","description","BookPage","fetchBook","getChosenBookId","findBook","find","match","Number","params","withRouter","getBook","console","log","Header","totalCount","App","role","path","component","exact","ErrorBoundary","hasError","errorInfo","setState","children","BookStoreService","getData","Error","Promise","resolve","reject","setTimeout","Math","random","updateOrder","addedQuantity","itemIndex","findIndex","newItem","updateCartItem","newCartItems","updateCartItems","calcTotal","calcTotalCount","slice","toFixedNumber","mapItem","reduce","prevValue","newValue","num","toFixed","updateShoppingCart","action","updateBookList","reducer","store","createStore","applyMiddleware","thunkMiddleware","getState","subscribe","ReactDOM","render","value","document","getElementById"],"mappings":"ubAAMA,EAAc,SAACC,GACjB,MAAO,CACHC,KAAM,qBACNC,QAASF,IAYXG,EAAoB,SAACC,GACvB,MAAO,CACHH,KAAM,qBACNC,QAASE,IAKXC,EAAkB,SAACC,GACrB,MAAO,CACHL,KAAM,qBACNC,QAASI,IAIXC,EAAsB,SAACD,GACzB,MAAO,CACHL,KAAM,yBACNC,QAASI,IAKXE,EAA0B,SAACF,GAC7B,MAAO,CACHL,KAAM,8BACNC,QAASI,I,OCvCFG,ECuCAC,aAdS,SAACC,GAErB,MAAO,CACHC,MAFwBD,EAArBE,SAAWD,UAOK,SAACE,GACxB,OAAOC,YAAmB,CACtBV,gBAAiBA,GAClBS,KAGQJ,EAlCM,SAAC,GAA2B,IAA1BM,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,cAClBC,EAAsCF,EAAtCE,MAAOC,EAA+BH,EAA/BG,OAAQC,EAAuBJ,EAAvBI,MAAOC,EAAgBL,EAAhBK,aAC7B,OACI,yBAAKC,UAAW,kBACZ,kBAAC,IAAD,CAAMC,GAAE,iBAAYP,EAAKQ,IAAMF,UAAa,cACxC,yBAAKG,IAAKJ,EAAcK,IAAK,UAEjC,yBAAKJ,UAAW,gBACZ,kBAAC,IAAD,CAAMC,GAAE,iBAAYP,EAAKQ,IAAMF,UAAW,cAAeJ,GACzD,yBAAKI,UAAW,eAAgBH,GAChC,yBAAKG,UAAW,cAAhB,IAAgCF,GAChC,4BAAQO,QAASV,EACTK,UAAW,4BADnB,oBChBDM,ECEE,SAAC,GAA4B,IAA3BhB,EAA0B,EAA1BA,MAAOK,EAAmB,EAAnBA,cACtB,OACI,wBAAIK,UAAW,aAEPV,EAAMiB,KAAI,SAAAb,GACN,OACI,wBAAIc,IAAKd,EAAKQ,IACV,kBAAC,EAAD,CAAcR,KAAMA,EAAMC,cAAe,kBAAMA,EAAcD,EAAKQ,aCmE/Ed,G,MAAAA,aAjBS,SAACC,GAAW,IAAD,EACiBA,EAAzCoB,aACP,MAAO,CACHC,MAH2B,EACTC,UAGlBC,MAJ2B,EACEC,eAQV,SAACrB,GACxB,OAAOC,YAAmB,CACtBqB,WAAY/B,EACZgC,WAAY9B,EACZ+B,SAAU9B,GACXM,KAGQJ,EAxEW,SAAC,GAAsD,IAArDsB,EAAoD,EAApDA,MAAOE,EAA6C,EAA7CA,MAAOE,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SA0B9D,OACI,yBAAKhB,UAAW,uBACZ,0CACA,2BAAOA,UAAW,SACd,+BACA,4BACI,iCACA,oCACA,qCACA,2CACA,+BAGJ,+BAEIU,EAAMH,KAxCJ,SAACU,EAAMC,GAAW,IACzBhB,EAA2Be,EAA3Bf,GAAIN,EAAuBqB,EAAvBrB,MAAOuB,EAAgBF,EAAhBE,MAAOP,EAASK,EAATL,MAEzB,OADAM,IAAUA,EACF,wBAAIV,IAAKU,GACb,4BAAKA,GACL,4BAAKtB,GACL,4BAAKuB,GACL,4BAAKP,GACL,4BACI,4BAAQP,QAAS,kBAAMW,EAASd,IACxBF,UAAU,6CACd,uBAAGA,UAAU,mBAEjB,4BAAQK,QAAS,kBAAMS,EAAWZ,IAC1BF,UAAU,8CACd,uBAAGA,UAAU,uBAEjB,4BAAQK,QAAS,kBAAMU,EAAWb,IAC1BF,UAAU,8CACd,uBAAGA,UAAU,+BA0BrB,yBAAKA,UAAW,SAAhB,WACaY,QCnDVQ,ICAAC,G,MCCC,WACZ,OACI,yBAAKrB,UAAU,UAAf,gBCHOsB,G,MCEQ,SAAC,GAAuD,IAAD,IAArDC,iBAAqD,MAAzC,oCAAyC,EAC1E,OAAQ,yBAAKvB,UAAU,mBACnB,0BAAMA,UAAU,gBAAhB,SACA,8BACKuB,GAEL,6BACI,kBAAC,IAAD,CAAMvB,UAAU,iBAAiBC,GAAI,KAArC,mBACA,sCACA,0BAAMD,UAAW,iBAAkBK,QAAS,kBAAMmB,OAAOC,SAASC,WAAlE,cCXGC,ECFC,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAgB,SAACC,GAC7B,OAAOD,EAAQE,aAAY,SAACC,EAASC,GAAV,OAAgBA,EAAED,KAAUF,K,ECKmBI,IAAMC,gBAApEC,E,EAATC,SAA4CC,E,EAATC,SCa3BC,EAhBc,kBAAM,SAACC,GAEhC,OAAO,SAACC,GACJ,OACI,kBAACJ,EAAD,MAEQ,SAACK,GACG,OAAQ,kBAACF,EAAD,iBAAaC,EAAb,CAAoBC,iBAAkBA,WCAhEC,E,6LAIEC,EADqBC,KAAKJ,MAAnBG,gB,+BAID,IAAD,EACiDC,KAAKJ,MAApDK,EADF,EACEA,eAAgBhE,EADlB,EACkBA,MAAOQ,EADzB,EACyBA,MAAOK,EADhC,EACgCA,cACrC,OAAImD,EACO,kBAAC,EAAD,MACAhE,EACA,kBAAC,EAAD,MAIP,6BACI,kBAAC,EAAD,CAAUQ,MAAOA,EAAOK,cAAeA,IACvC,kBAAC,EAAD,W,GAlBOsC,IAAMc,WAkDdpB,IACXY,IACAnD,aAzBoB,SAACC,GAAW,IAAD,EACoBA,EAA5CE,SACP,MAAO,CACHuD,eAH2B,EACbA,eAGdhE,MAJ2B,EACGA,MAI9BQ,MAL2B,EACUA,UAUlB,SAACE,EAAUwD,GAClC,MAAO,CACHJ,WAAY,WACRpD,Ef1CD,CACHb,KAAM,uBe0CFqE,EAASN,iBAAiBO,WACrBC,MAAK,SAAA5D,GAAK,OAAIE,EAASf,EAAYa,OACnC6D,OAAM,SAAArE,GAAK,OAAIU,EAASX,EAAkBC,QAEnDa,cAAe,SAACO,GAAD,OAAQV,EAAST,EAAgBmB,SAIzCyB,CAGbgB,GChDaS,EAZE,WACb,OACI,6BACI,kBAAC,EAAD,MACA,4BAAQzE,KAAK,SAASqB,UAAU,8BACxBqD,MAAO,CAAC,MAAS,QAAS,aAAc,SADhD,UCLGC,G,MCCE,SAAC,GAA2B,IAA1B5D,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,cACdC,EAAmDF,EAAnDE,MAAOC,EAA4CH,EAA5CG,OAAQC,EAAoCJ,EAApCI,MAAOC,EAA6BL,EAA7BK,aAAcwD,EAAe7D,EAAf6D,YAC3C,OACI,yBAAKvD,UAAW,aACR,yBAAKG,IAAKJ,EAAcK,IAAK,SAC7B,yBAAKJ,UAAW,cAAeJ,GAC/B,yBAAKI,UAAW,eAAgBH,GAChC,yBAAKG,UAAW,oBAAqBuD,GACrC,yBAAKvD,UAAW,cAAhB,IAAgCF,GAChC,4BAAQO,QAASV,EACTK,UAAW,4BADnB,kBCDVwD,E,4LAEmB,IACVC,EAAaZ,KAAKJ,MAAlBgB,UACDzE,EAAS6D,KAAKa,kBAEPb,KAAKc,SAAS3E,IAEvByE,EAAUzE,K,+BAITA,GAEL,OADgB6D,KAAKJ,MAAdnD,MACMsE,MAAK,SAAAlE,GAAI,OAAIA,EAAKQ,KAAOlB,O,wCAGvB,IACR6E,EAAShB,KAAKJ,MAAdoB,MACP,OAAOC,OAAOD,EAAME,OAAO7D,M,+BAGrB,IAAD,EAC0C2C,KAAKJ,MAA7C9C,EADF,EACEA,cAAeb,EADjB,EACiBA,MAAOgE,EADxB,EACwBA,eAC7B,GAAIhE,EACA,OAAO,kBAAC,EAAD,CAAgByC,UAAS,oBAC7B,GAAIuB,EACP,OAAO,kBAAC,EAAD,MAEX,IAAM9D,EAAS6D,KAAKa,kBACdhE,EAAOmD,KAAKc,SAAS3E,GAC3B,OAAO,kBAAC,EAAD,CAAUU,KAAMA,EAAMC,cAAe,kBAAMA,EAAcX,U,GA/BjDiD,IAAMc,WA2DdpB,IACXY,IACAyB,IACA5E,aA1BoB,SAACC,GAAW,IAAD,EACoBA,EAA5CE,SACP,MAAO,CACHD,MAH2B,EACbA,MAEPR,MAHoB,EACNA,MAEPgE,eAHa,EACCA,mBAOT,SAACtD,EAAUwD,GAClC,MAAO,CACHrD,cAAe,SAACO,GAAD,OAAQV,EAAST,EAAgBmB,KAChDuD,UAAW,SAACvD,GACR8C,EAASN,iBAAiBuB,QAAQ/D,GAC7BgD,MAAK,SAAAxD,GACFwE,QAAQC,IAAIzE,GACZF,EAASf,EAAY,CAACiB,QAEzByD,OAAM,SAAArE,GAAK,OAAIU,EAASX,EAAkBC,YAM5C6C,CAIb6B,GCxEaY,G,MC+BAhF,aARS,SAACC,GAAW,IAAD,EACkBA,EAA1CoB,aACP,MAAO,CACHU,MAH2B,EACTkD,WAGlBzD,MAJ2B,EACGC,cAOvBzB,EA5BA,SAAC,GAAoB,IAAnB+B,EAAkB,EAAlBA,MAAOP,EAAW,EAAXA,MAEpB,OACI,4BAAQZ,UAAW,eACf,kBAAC,IAAD,CAAMC,GAAI,KACN,yBAAKD,UAAW,aAAhB,YAGJ,kBAAC,IAAD,CAAMC,GAAI,SACN,6BACI,uBAAGD,UAAW,kCACbmB,EAFL,YAEqBP,EAFrB,WCZD0D,ECIH,WACR,OACI,0BAAMC,KAAM,OAAQvE,UAAW,aAC3B,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOwE,KAAK,IAAIC,UAAW9B,EAAU+B,OAAK,IAC1C,kBAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWrB,IAC/B,kBAAC,IAAD,CAAOoB,KAAK,aAAaC,UAAWjB,OCXrCmB,E,2MCOXtF,MAAQ,CACJuF,UAAU,G,iFAGI9F,EAAO+F,GACrBX,QAAQC,IAAIU,GACZhC,KAAKiC,SAAS,CAACF,UAAU,M,+BAKzB,OADmB/B,KAAKxD,MAAjBuF,SAEI,kBAAC,EAAD,MAGJ/B,KAAKJ,MAAMsC,a,GAlBiBhC,a,yBCNtBiC,E,yIAEH9E,G,0EACJR,EAAOsF,EAAiBC,UAAUrB,MAAK,SAAA3C,GAAI,OAAIA,EAAKf,KAAOA,K,sBAEvD,IAAIgF,MAAM,mB,gCAEbxF,G,mIAIP,OAAO,IAAIyF,SAAQ,SAACC,EAASC,GAEzBC,YAAW,WACHC,KAAKC,SAAW,KAChBH,EAAO,IAAIH,MAAM,uBAErBE,EAAQJ,EAAiBC,aAC1B,W,iCAKP,MAAO,CACH,CACI/E,GAAI,EACJL,OAAQ,eACRD,MAAO,gCACPE,MAAO,KACPC,aAAc,2FACdwD,YAAa,ynCAUjB,CACIrD,GAAI,EACJL,OAAQ,iBACRD,MAAM,gFACNE,MAAO,MACPC,aAAc,2FACdwD,YAAa,24B,aCxBvBkC,EAAc,SAACpG,EAAOL,EAAQ0G,GAAmB,IAE7B/E,EAAiCtB,EAAhDoB,aAAeE,UAAuBrB,EAAUD,EAArBE,SAAWD,MACvCqG,EAAYhF,EAAUiF,WAAU,SAAA3E,GAAI,OAAIA,EAAKf,KAAOlB,KACpDiC,EAAON,EAAUgF,GACjBjG,EAAOJ,EAAMsE,MAAK,SAAAlE,GAAI,OAAIA,EAAKQ,KAAOlB,KACxC6G,EAAUC,EAAepG,EAAMuB,EAAMyE,GACnCK,EAAeC,EAAgBrF,EAAWkF,EAASF,GACzD,MAAO,CACH9E,WAAYoF,EAAUF,GACtBpF,UAAWoF,EACX1B,WAAY6B,EAAeH,KAK7BC,EAAkB,SAACrF,EAAWM,EAAMC,GACtC,OAAmB,IAAfD,EAAKE,MACC,GAAN,mBAAWR,EAAUwF,MAAM,EAAGjF,IAA9B,YAAyCP,EAAUwF,MAAMjF,EAAQ,MAEtD,IAAXA,EACM,GAAN,mBAAWP,GAAX,CAAsBM,IAEhB,GAAN,mBAAWN,EAAUwF,MAAM,EAAGjF,IAA9B,CAAsCD,GAAtC,YAA+CN,EAAUwF,MAAMjF,EAAQ,MAIzE4E,EAAiB,SAACpG,GAAoC,IAA9BuB,EAA6B,uDAAtB,GAAIyE,EAAkB,yCACUzE,EAA1Df,UADgD,MAC3CR,EAAKQ,GADsC,IACUe,EAA5CE,aADkC,MAC1B,EAD0B,IACUF,EAAjCrB,aADuB,MACfF,EAAKE,MADU,IACUqB,EAAbL,aADG,MACK,EADL,EAGvD,MAAO,CACHV,KACAN,QACAuB,MAAOA,EAAQuE,EACf9E,MAAOwF,EAAcxF,EAAQlB,EAAKI,MAAQ4F,KAI5CQ,EAAiB,SAACvF,GAAD,OAAeA,EACjCJ,KAAI,SAAC8F,GAAD,OAAaA,EAAQlF,SACzBmF,QAAO,SAACC,EAAWC,GAAZ,OAAyBD,EAAYC,IAAU,IAErDP,EAAY,SAACtF,GAAD,OAAeyF,EAAczF,EAC1CJ,KAAI,SAAC8F,GAAD,OAAaA,EAAQzF,SACzB0F,QAAO,SAACC,EAAWC,GAAZ,OAAyBD,EAAYC,IAAU,KAErDJ,EAAgB,SAACK,GAAD,OAAS3C,OAAOA,OAAO2C,GAAKC,QAAQ,KAE3CC,EAtEY,SAACtH,EAAOuH,GAC/B,IAAKvH,EACD,MAAO,CACHsB,UAAW,GACXE,WAAY,EACZwD,WAAY,GAGpB,OAAQuC,EAAOjI,MACX,IAAK,qBACD,OAAO8G,EAAYpG,EAAOuH,EAAOhI,QAAS,GAC9C,IAAK,8BACD,IAAMqC,EAAO5B,EAAMoB,aAAaE,UAAUiD,MAAK,SAAA3C,GAAI,OAAIA,EAAKf,KAAO0G,EAAOhI,WAC1E,OAAO6G,EAAYpG,EAAOuH,EAAOhI,SAAUqC,EAAKE,OACpD,IAAK,yBACD,OAAOsE,EAAYpG,EAAOuH,EAAOhI,SAAU,GAC/C,QACI,OAAOS,EAAMoB,eCgBToG,EAjCO,SAACxH,EAAOuH,GAC3B,IAAKvH,EACD,MAAO,CACHC,MAAO,GACPwD,gBAAgB,EAChBhE,MAAO,MAGf,OAAQ8H,EAAOjI,MACX,IAAK,qBACD,MAAO,CACHW,MAAOsH,EAAOhI,QACdkE,gBAAgB,EAChBhE,MAAO,MAEf,IAAK,qBACD,MAAO,CACHQ,MAAO,GACPwD,gBAAgB,EAChBhE,MAAO,MAEf,IAAK,qBACD,MAAO,CACHA,MAAO8H,EAAOhI,QACdU,MAAO,GACPwD,gBAAgB,GAExB,QACI,OAAOzD,EAAME,WCjBVuH,GARC,SAACzH,EAAOuH,GACpB,MAAO,CACHrH,SAAUsH,EAAexH,EAAOuH,GAChCnG,aAAckG,EAAmBtH,EAAOuH,K,SCe1CG,GAAQC,YAAYF,GAASG,YAAgBC,MAT1B,SAACH,GAAD,OAAW,SAACvH,GAAD,OAAc,SAACoH,GAM/C,MALsB,kBAAXA,IACPA,EAAS,CACLjI,KAAMiI,IAGPpH,EAASoH,QAbE,SAACG,GAAD,OAAW,SAACvH,GAAD,OAAc,SAACoH,GAI5C,OAHA1C,QAAQC,IAAIyC,EAAOjI,MACnBuF,QAAQC,IAAIyC,EAAOhI,SACnBsF,QAAQC,IAAI4C,EAAMI,YACX3H,EAASoH,SAepBG,GAAMK,WAAU,kBAAMlD,QAAQC,IAAR,uBAGP4C,UChBTrE,GAAmB,IAAIsC,EAE7BqC,IAASC,OACL,kBAAC,IAAD,CAAUP,MAAOA,IAAjB,IACI,kBAAC,EAAD,SACI,kBAAC5E,EAAD,CAA0BoF,MAAO7E,IAAjC,IACI,kBAAC,IAAD,SACI,kBAAC,EAAD,UAKhB8E,SAASC,eAAe,W","file":"static/js/main.1fb7e9f4.chunk.js","sourcesContent":["const booksLoaded = (newBookList) => {\r\n    return {\r\n        type: 'FETCH_BOOK_SUCCESS',\r\n        payload: newBookList\r\n    }\r\n};\r\n\r\n\r\nconst booksLoading = () => {\r\n    return {\r\n        type: 'FETCH_BOOK_REQUEST',\r\n\r\n    }\r\n};\r\n\r\nconst booksLoadingError = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOK_FAILURE',\r\n        payload: error\r\n\r\n    }\r\n};\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n\r\n    }\r\n};\r\nconst bookRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_REMOVED_FROM_CART',\r\n        payload: bookId\r\n\r\n    }\r\n};\r\n\r\nconst allBooksRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n        payload: bookId\r\n\r\n    }\r\n};\r\n\r\nexport {\r\n    booksLoaded, booksLoading, booksLoadingError, bookAddedToCart, bookRemovedFromCart, allBooksRemovedFromCart\r\n};","import BookListItem from \"./book-list-item\";\r\n\r\nexport default BookListItem;","import React from 'react';\r\nimport './book-list-item.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {bookAddedToCart} from \"../../actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst BookListItem = ({book, onAddedToCart}) => {\r\n    const {title, author, price, bookImageUrl} = book;\r\n    return (\r\n        <div className={'book-list-item'}>\r\n            <Link to={`/books/${book.id}`} className = {'book-image'}>\r\n                <img src={bookImageUrl} alt={'book'}/>\r\n            </Link>\r\n            <div className={'book-details'}>\r\n                <Link to={`/books/${book.id}`} className={'book-title'}>{title}</Link>\r\n                <div className={'book-author'}>{author}</div>\r\n                <div className={'book-price'}>${price}</div>\r\n                <button onClick={onAddedToCart}\r\n                        className={'btn btn-info add-to-cart'}>Add to cart\r\n                </button>\r\n            </div>\r\n        </div>)\r\n};\r\n\r\n\r\n//маппинг свойств из redux к props компонента\r\nconst mapStateToProps = (state) => {\r\n    const {bookList: {books}} = state;\r\n    return {\r\n        books\r\n    };\r\n};\r\n\r\n//маппинг свойств из redux к action\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        bookAddedToCart: bookAddedToCart,\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookListItem);","import BookListContainer from \"./book-list\";\r\n\r\nexport default BookListContainer;","import React from 'react';\r\nimport './book-list.css';\r\nimport BookListItem from \"../book-list-item\";\r\n\r\nconst BookList = ({books, onAddedToCart}) => {\r\n    return (\r\n        <ul className={'book-list'}>\r\n            {\r\n                books.map(book => {\r\n                    return (\r\n                        <li key={book.id}>\r\n                            <BookListItem book={book} onAddedToCart={() => onAddedToCart(book.id)}/>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default BookList;\r\n","import React from 'react';\r\nimport './shopping-cart-table.css';\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {allBooksRemovedFromCart, bookAddedToCart, bookRemovedFromCart} from \"../../actions\";\r\n\r\nconst ShoppingCartTable = ({items, total, onIncrease, onDecrease, onDelete}) => {\r\n    const renderRow = (item, index) => {\r\n        const {id, title, count, total} = item;\r\n        index = ++index;\r\n        return (<tr key={index}>\r\n            <td>{index}</td>\r\n            <td>{title}</td>\r\n            <td>{count}</td>\r\n            <td>{total}</td>\r\n            <td>\r\n                <button onClick={() => onDelete(id)}\r\n                        className=\"btn btn-outline-danger btn-sm float-right\">\r\n                    <i className=\"fa fa-trash-o\"/>\r\n                </button>\r\n                <button onClick={() => onIncrease(id)}\r\n                        className=\"btn btn-outline-success btn-sm float-right\">\r\n                    <i className=\"fa fa-plus-circle\"/>\r\n                </button>\r\n                <button onClick={() => onDecrease(id)}\r\n                        className=\"btn btn-outline-warning btn-sm float-right\">\r\n                    <i className=\"fa fa-minus-circle\"/>\r\n                </button>\r\n            </td>\r\n        </tr>)\r\n    };\r\n\r\n    return (\r\n        <div className={'shopping-cart-table'}>\r\n            <h2>Your Order</h2>\r\n            <table className={'table'}>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Item</th>\r\n                    <th>Count</th>\r\n                    <th>Total Price</th>\r\n                    <th/>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    items.map(renderRow)\r\n                }\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className={'total'}>\r\n                Total: ${total}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n//маппинг свойств из redux к props компонента\r\nconst mapStateToProps = (state) => {\r\n    const {shoppingCart: {cartItems, orderTotal}} = state;\r\n    return {\r\n        items: cartItems,\r\n        total: orderTotal\r\n    };\r\n};\r\n\r\n//маппинг свойств из redux к action\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        onIncrease: bookAddedToCart,\r\n        onDecrease: bookRemovedFromCart,\r\n        onDelete: allBooksRemovedFromCart\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);","import ShoppingCartTable from \"./shopping-cart-table\";\r\n\r\nexport default ShoppingCartTable;","import Spinner from \"./spinner\";\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\">Loading...</div>\r\n    )\r\n};\r\n\r\nexport default Spinner;","import ErrorIndicator from \"./error-indicator\";\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ErrorIndicator = ({errorText = 'something has gone terribly wrong'}) => {\r\n    return (<div className=\"error-indicator\">\r\n        <span className=\"error-header\">OOPS!</span>\r\n        <span>\r\n            {errorText}\r\n      </span>\r\n        <div>\r\n            <Link className='main-page-link' to={'/'}>Go to main page</Link>\r\n            <span> or </span>\r\n            <span className={'main-page-link'} onClick={() => window.location.reload()}>Reload</span>\r\n        </div>\r\n    </div>)\r\n};\r\n\r\nexport default ErrorIndicator;","import compose from \"./compose\";\r\n\r\nexport default compose;","const compose = (...funcArr) => (componentToWrap) => {\r\n    return funcArr.reduceRight((wrapped, f) => f(wrapped), componentToWrap);\r\n};\r\n\r\nexport default compose;","import React from 'react';\r\n\r\n/*\r\nКонтекст, который передает данные всем компонентам, используя ContextApi React\r\n */\r\n\r\nconst {Provider:BookStoreServiceProvider, Consumer:BookStoreServiceConsumer}= React.createContext();\r\n\r\nexport {\r\n    BookStoreServiceConsumer,\r\n    BookStoreServiceProvider\r\n}\r\n","import React from 'react';\r\nimport {BookStoreServiceConsumer} from '../bookstore-service-context';\r\n\r\nconst withBookStoreService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <BookStoreServiceConsumer>\r\n                {\r\n                    (bookStoreService) => {\r\n                        return (<Wrapped {...props} bookStoreService={bookStoreService}/>)\r\n                    }\r\n                }\r\n\r\n            </BookStoreServiceConsumer>\r\n        );\r\n    };\r\n};\r\n\r\nexport default withBookStoreService;","import React from 'react';\r\nimport BookList from \"../book-list\";\r\nimport ShoppingCartTable from \"../shopping-cart-table\";\r\nimport {connect} from \"react-redux\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport compose from \"../../utils\";\r\nimport {withBookStoreService} from \"../hoc\";\r\nimport {bookAddedToCart, booksLoaded, booksLoading, booksLoadingError} from \"../../actions\";\r\n\r\nclass HomePage extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {fetchBooks} = this.props;\r\n        fetchBooks();\r\n    }\r\n\r\n    render() {\r\n        const {isBooksLoading, error, books, onAddedToCart} = this.props;\r\n        if (isBooksLoading) {\r\n            return <Spinner/>;\r\n        } else if (error) {\r\n            return <ErrorIndicator/>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <BookList books={books} onAddedToCart={onAddedToCart}/>\r\n                <ShoppingCartTable/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//маппинг свойств из redux к props компонента\r\nconst mapStateToProps = (state) => {\r\n    const {bookList: {isBooksLoading, error, books}} = state;\r\n    return {\r\n        isBooksLoading,\r\n        error,\r\n        books\r\n    };\r\n};\r\n\r\n\r\n//маппинг свойств из redux к action\r\nconst mapDispatchToProps = (dispatch, ownProps /*свойства компонента*/) => {\r\n    return {\r\n        fetchBooks: () => {\r\n            dispatch(booksLoading());\r\n            ownProps.bookStoreService.getBooks()\r\n                .then(books => dispatch(booksLoaded(books)))\r\n                .catch(error => dispatch(booksLoadingError(error)));\r\n        },\r\n        onAddedToCart: (id) => dispatch(bookAddedToCart(id))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withBookStoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(HomePage);\r\n","import React from 'react';\r\nimport ShoppingCartTable from \"../shopping-cart-table/shopping-cart-table\";\r\n\r\nconst CartPage = () => {\r\n    return (\r\n        <div>\r\n            <ShoppingCartTable/>\r\n            <button type=\"button\" className=\"btn btn-primary float-right\"\r\n                    style={{'clear': 'right', 'margin-top': '20px'}}>BUY!\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CartPage;","import BookItem from \"./book-item\";\r\n\r\nexport default BookItem;","import React from 'react';\r\nimport './book-item.css';\r\n\r\nconst BookItem = ({book, onAddedToCart}) => {\r\n    const {title, author, price, bookImageUrl, description} = book;\r\n    return (\r\n        <div className={'book-item'}>\r\n                <img src={bookImageUrl} alt={'book'}/>\r\n                <div className={'book-title'}>{title}</div>\r\n                <div className={'book-author'}>{author}</div>\r\n                <div className={'book-description'}>{description}</div>\r\n                <div className={'book-price'}>${price}</div>\r\n                <button onClick={onAddedToCart}\r\n                        className={'btn btn-info add-to-cart'}>Add to cart\r\n                </button>\r\n        </div>)\r\n};\r\n\r\nexport default BookItem;","import React from 'react';\r\nimport {bookAddedToCart, booksLoaded, booksLoadingError} from \"../../actions\";\r\nimport {connect} from \"react-redux\";\r\nimport compose from \"../../utils\";\r\nimport BookItem from \"../../book-item-page\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport {withBookStoreService} from \"../hoc\";\r\nimport Spinner from \"../spinner\";\r\n\r\n\r\nclass BookPage extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {fetchBook} = this.props;\r\n        const bookId = this.getChosenBookId();\r\n\r\n        const book = this.findBook(bookId);\r\n        if (!book) {\r\n            fetchBook(bookId);\r\n        }\r\n    }\r\n\r\n    findBook(bookId) {\r\n        const {books} = this.props;\r\n        return books.find(book => book.id === bookId);\r\n    }\r\n\r\n    getChosenBookId() {\r\n        const {match} = this.props;\r\n        return Number(match.params.id);\r\n    }\r\n\r\n    render() {\r\n        const {onAddedToCart, error, isBooksLoading} = this.props;\r\n        if (error) {\r\n            return <ErrorIndicator errorText={`Book not found!`}/>\r\n        } else if (isBooksLoading) {\r\n            return <Spinner/>;\r\n        }\r\n        const bookId = this.getChosenBookId();\r\n        const book = this.findBook(bookId);\r\n        return <BookItem book={book} onAddedToCart={() => onAddedToCart(bookId)}/>\r\n    }\r\n}\r\n\r\n//маппинг свойств из redux к props компонента\r\nconst mapStateToProps = (state) => {\r\n    const {bookList: {books, error, isBooksLoading}} = state;\r\n    return {\r\n        books, error, isBooksLoading\r\n    };\r\n};\r\n\r\n//маппинг свойств из redux к action\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onAddedToCart: (id) => dispatch(bookAddedToCart(id)),\r\n        fetchBook: (id) => {\r\n            ownProps.bookStoreService.getBook(id)\r\n                .then(book => {\r\n                    console.log(book);\r\n                    dispatch(booksLoaded([book]))\r\n                })\r\n                .catch(error => dispatch(booksLoadingError(error)));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    withBookStoreService(),\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookPage);","import Header from \"./header\";\r\n\r\nexport default Header;","import React from 'react';\r\nimport './header.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Header = ({count, total}) => {\r\n\r\n    return (\r\n        <header className={'shop-header'}>\r\n            <Link to={'/'}>\r\n                <div className={'shop-name'}>ReStore</div>\r\n            </Link>\r\n\r\n            <Link to={'/cart'}>\r\n                <div>\r\n                    <i className={'cart-icon fa fa-shopping-cart'}/>\r\n                    {count} items (${total})\r\n                </div>\r\n            </Link>\r\n        </header>\r\n    )\r\n};\r\n\r\n\r\n//маппинг свойств из redux к props компонента\r\nconst mapStateToProps = (state) => {\r\n    const {shoppingCart: {totalCount, orderTotal}} = state;\r\n    return {\r\n        count: totalCount,\r\n        total: orderTotal\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);","import App from \"./app\";\r\n\r\nexport default App;","import React from 'react';\r\nimport './app.css';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {BookPage, CartPage, HomePage} from '../pages';\r\nimport Header from \"../header\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <main role={'main'} className={'container'}>\r\n            <Header/>\r\n            <Switch>\r\n                <Route path='/' component={HomePage} exact/>\r\n                <Route path='/cart' component={CartPage}/>\r\n                <Route path='/books/:id' component={BookPage}/>\r\n            </Switch>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default App;","import ErrorBoundary from \"./error-boundary\";\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\n/*\r\n Класс отвечающий за обработку ошибок\r\n */\r\nexport default class ErrorBoundary extends Component {\r\n\r\n\r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(errorInfo);\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        const {hasError} = this.state;\r\n        if (hasError) {\r\n            return <ErrorIndicator/>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n","export default class BookStoreService {\r\n\r\n    async getBook(id) {\r\n        const book = BookStoreService.getData().find(item => item.id === id);\r\n        if (!book) {\r\n            throw new Error(\"can't find book\");\r\n        }\r\n        return book;\r\n    }\r\n\r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n                if (Math.random() > 0.95) {\r\n                    reject(new Error('unrecognized error'))\r\n                }\r\n                resolve(BookStoreService.getData())\r\n            }, 2000);\r\n        })\r\n    }\r\n\r\n    static getData() {\r\n        return [\r\n            {\r\n                id: 1,\r\n                author: 'Kyle Simpson',\r\n                title: 'You Don\\'t Know JS: Up & Going',\r\n                price: 9.39,\r\n                bookImageUrl: 'https://images-na.ssl-images-amazon.com/images/I/41WdbPkuINL._SX331_BO1,204,203,200_.jpg',\r\n                description: \"It’s easy to learn parts of JavaScript, but much harder to learn it completely—or even sufficiently—whether you’re new to the language or have used it for years. With the \\\"You Don’t Know JS\\\" book series, you’ll get a more complete understanding of JavaScript, including trickier parts of the language that many experienced JavaScript programmers simply avoid.\\n\" +\r\n                    \"\\n\" +\r\n                    \"The series’ first book, Up & Going, provides the necessary background for those of you with limited programming experience. By learning the basic building blocks of programming, as well as JavaScript’s core mechanisms, you’ll be prepared to dive into the other, more in-depth books in the series—and be well on your way toward true JavaScript.\\n\" +\r\n                    \"\\n\" +\r\n                    \"With this book you will:\\n\" +\r\n                    \"\\n\" +\r\n                    \"Learn the essential programming building blocks, including operators, types, variables, conditionals, loops, and functions\\n\" +\r\n                    \"Become familiar with JavaScript's core mechanisms such as values, function closures, this, and prototypes\\n\" +\r\n                    \"Get an overview of other books in the series—and learn why it’s important to understand all parts of JavaScript\"\r\n            },\r\n            {\r\n                id: 2,\r\n                author: 'David Flanagan',\r\n                title: `JavaScript: The Definitive Guide: Activate Your Web Pages (Definitive Guides)`,\r\n                price: 33.99,\r\n                bookImageUrl: 'https://images-na.ssl-images-amazon.com/images/I/51lu4ArIFYL._SX379_BO1,204,203,200_.jpg',\r\n                description: 'Since 1996, JavaScript: The Definitive Guide has been the bible for JavaScript programmers—a programmer\\'s guide and comprehensive reference to the core language and to the client side JavaScript APIs defined by web browsers.\\n' +\r\n                    '\\n' +\r\n                    'The 6th edition covers HTML5 and ECMAScript 5. Many chapters have been completely rewritten to bring them in line with today\\'s best web development practices. New chapters in this edition document jQuery and server side JavaScript. It\\'s recommended for experienced programmers who want to learn the programming language of the Web, and for current JavaScript programmers who want to master it.\\n' +\r\n                    '\\n' +\r\n                    '\"A must have reference for expert JavaScript programmers...well organized and detailed.\"\\n' +\r\n                    '\\n' +\r\n                    '—Brendan Eich, creator of JavaScript, CTO of Mozilla\\n' +\r\n                    '\\n' +\r\n                    '\"I made a career of what I learned from JavaScript: The Definitive Guide.”\\n' +\r\n                    '\\n' +\r\n                    '—Andrew Hedges, Tapulous'\r\n            }];\r\n    }\r\n}","const updateShoppingCart = (state, action) => {\r\n    if (!state) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0,\r\n            totalCount: 0\r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1);\r\n        case 'ALL_BOOKS_REMOVED_FROM_CART':\r\n            const item = state.shoppingCart.cartItems.find(item => item.id === action.payload);\r\n            return updateOrder(state, action.payload, -item.count);\r\n        case 'BOOK_REMOVED_FROM_CART':\r\n            return updateOrder(state, action.payload, -1);\r\n        default:\r\n            return state.shoppingCart;\r\n    }\r\n};\r\n\r\n\r\nconst updateOrder = (state, bookId, addedQuantity) => {\r\n\r\n    const {shoppingCart: {cartItems}, bookList: {books}} = state;\r\n    const itemIndex = cartItems.findIndex(item => item.id === bookId);\r\n    const item = cartItems[itemIndex];\r\n    const book = books.find(book => book.id === bookId);\r\n    let newItem = updateCartItem(book, item, addedQuantity);\r\n    const newCartItems = updateCartItems(cartItems, newItem, itemIndex);\r\n    return {\r\n        orderTotal: calcTotal(newCartItems),\r\n        cartItems: newCartItems,\r\n        totalCount: calcTotalCount(newCartItems)\r\n    }\r\n};\r\n\r\n\r\nconst updateCartItems = (cartItems, item, index) => {\r\n    if (item.count === 0) {\r\n        return [...cartItems.slice(0, index), ...cartItems.slice(index + 1)]\r\n    }\r\n    if (index === -1) {\r\n        return [...cartItems, item];\r\n    } else {\r\n        return [...cartItems.slice(0, index), item, ...cartItems.slice(index + 1)]\r\n    }\r\n};\r\n\r\nconst updateCartItem = (book, item = {}, addedQuantity) => {\r\n    const {id = book.id, count = 0, title = book.title, total = 0} = item;\r\n\r\n    return {\r\n        id,\r\n        title,\r\n        count: count + addedQuantity,\r\n        total: toFixedNumber(total + book.price * addedQuantity)\r\n    }\r\n};\r\n\r\nconst calcTotalCount = (cartItems) => cartItems\r\n    .map((mapItem) => mapItem.count)\r\n    .reduce((prevValue, newValue) => prevValue + newValue, 0);\r\n\r\nconst calcTotal = (cartItems) => toFixedNumber(cartItems\r\n    .map((mapItem) => mapItem.total)\r\n    .reduce((prevValue, newValue) => prevValue + newValue, 0));\r\n\r\nconst toFixedNumber = (num) => Number(Number(num).toFixed(2));\r\n\r\nexport default updateShoppingCart;","const updateBookList = (state, action) => {\r\n    if (!state) {\r\n        return {\r\n            books: [],\r\n            isBooksLoading: true,\r\n            error: null\r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case 'FETCH_BOOK_SUCCESS':\r\n            return {\r\n                books: action.payload,\r\n                isBooksLoading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOK_REQUEST':\r\n            return {\r\n                books: [],\r\n                isBooksLoading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOK_FAILURE':\r\n            return {\r\n                error: action.payload,\r\n                books: [],\r\n                isBooksLoading: false\r\n            };\r\n        default:\r\n            return state.bookList;\r\n    }\r\n\r\n};\r\n\r\nexport default  updateBookList;","import updateShoppingCart from \"./shopping-cart\";\r\nimport updateBookList from \"./bookList\";\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action)\r\n    }\r\n};\r\n\r\n\r\nexport default reducer;","import {createStore, applyMiddleware} from \"redux\";\r\nimport reducer from \"./reducers\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n\r\nconst logMiddleware = (store) => (dispatch) => (action) => {\r\n    console.log(action.type);\r\n    console.log(action.payload);\r\n    console.log(store.getState());\r\n    return dispatch(action);\r\n};\r\n\r\nconst stringMiddleware = (store) => (dispatch) => (action) => {\r\n    if (typeof action === 'string') {\r\n        action = {\r\n            type: action\r\n        }\r\n    }\r\n    return dispatch(action);\r\n};\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware, stringMiddleware, logMiddleware));\r\n\r\n\r\nstore.subscribe(() => console.log(`store is updated`));\r\n\r\n\r\nexport default store;\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from \"./components/app\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport ErrorBoundary from \"./components/error-boundary\";\r\nimport BookStoreService from \"./services/bookstore-service\";\r\nimport {BookStoreServiceProvider} from \"./components/bookstore-service-context\";\r\nimport store from \"./store\";\r\n\r\n\r\nconst bookStoreService = new BookStoreService();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}> {/*redux хранилище*/}\r\n        <ErrorBoundary> {/*Обработка ошибок*/}\r\n            <BookStoreServiceProvider value={bookStoreService}> {/*добавление сервиса в контекст*/}\r\n                <BrowserRouter> {/*доступ к роутингу*/}\r\n                    <App/>\r\n                </BrowserRouter>\r\n            </BookStoreServiceProvider>\r\n        </ErrorBoundary>\r\n    </Provider>,\r\n    document.getElementById('root'));"],"sourceRoot":""}